{"version":3,"sources":["nm-style.scss","buttons.scss","variables.scss","timer.scss","input.scss","app.scss"],"names":[],"mappings":"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","file":"main.5544bcae.chunk.css","sourcesContent":["@import './variables.scss';\n\n.body-theme{\n  background-color: $bg-color;\n}\n\n@mixin nm-shape {\n\n  transition:\n  box-shadow 200ms cubic-bezier(.68,-0.55,.25,3.49),\n  transform 200ms cubic-bezier(.68,-0.55,.25,3.49),\n  background-color 100ms ease-out;\n\n  transform: scale(1);\n  font-size: $btn-size * 0.6;\n\tmargin: $size-ratio * 0.2;\n\tborder: none;\n  background: transparent;\n  text-align: center;\n  outline: none;\n}\n\n  // @at-root #{&}--convex {\n@mixin nm-shape--convex(){\n  @include nm-shape;\n  box-shadow:\n    $btn-shad-size 0px $btn-shad-size $shad-col,\n    0px $btn-shad-size $btn-shad-size $shad-col,\n    (-$btn-shad-size) 0px $btn-shad-size $light-col,\n    0px (-$btn-shad-size) $btn-shad-size $light-col,\n    inset $btn-shad-size 0px $btn-shad-size  $light-col,\n    inset 0px $btn-shad-size $btn-shad-size  $light-col,\n    inset (-$btn-shad-size) 0px $btn-shad-size  $shad-col,\n    inset 0px (-$btn-shad-size) $btn-shad-size  $shad-col,\n\n    $btn-shad-size $btn-shad-size $btn-shad-size $shad-col,\n    (-$btn-shad-size) (-$btn-shad-size) $btn-shad-size $light-col,\n    inset $btn-shad-size $btn-shad-size $btn-shad-size  $shad-col,\n    inset (-$btn-shad-size) (-$btn-shad-size) $btn-shad-size  $light-col;\n}\n\n  // @at-root #{&}--convex-raised {\n@mixin nm-shape--convex-raised {\n  @include nm-shape;\n  outline: none;\n  transform: scale(0.95);\n  box-shadow:\n    $hover-btn-shad-size 0px $hover-btn-shad-size $shad-col,\n    0px $hover-btn-shad-size $hover-btn-shad-size $shad-col,\n    (-$hover-btn-shad-size) 0px $hover-btn-shad-size $light-col,\n    0px (-$hover-btn-shad-size) $hover-btn-shad-size $light-col,\n    inset $btn-shad-size 0px $btn-shad-size  $light-col,\n    inset 0px $btn-shad-size $btn-shad-size  $light-col,\n    inset (-$btn-shad-size) 0px $btn-shad-size  $shad-col,\n    inset 0px (-$btn-shad-size) $btn-shad-size  $shad-col,\n\n    $btn-shad-size $btn-shad-size $btn-shad-size $shad-col,\n    (-$btn-shad-size) (-$btn-shad-size) $btn-shad-size $light-col,\n    inset $btn-shad-size $btn-shad-size $btn-shad-size  $shad-col,\n    inset (-$btn-shad-size) (-$btn-shad-size) $btn-shad-size  $light-col;\n}\n\n  // @at-root #{&}--concave {\n@mixin nm-shape--concave {\n    @include nm-shape;\n    transform: scale(0.95);\n    box-shadow:\n      $hover-btn-shad-size 0px $hover-btn-shad-size $shad-col,\n      0px $hover-btn-shad-size $hover-btn-shad-size $shad-col,\n      (-$hover-btn-shad-size) 0px $hover-btn-shad-size $light-col,\n      0px (-$hover-btn-shad-size) $hover-btn-shad-size $light-col,\n      inset $btn-shad-size 0px $btn-shad-size  $shad-col,\n      inset 0px $btn-shad-size $btn-shad-size  $shad-col,\n      inset (-$btn-shad-size) 0px $btn-shad-size  $light-col,\n      inset 0px (-$btn-shad-size) $btn-shad-size  $light-col,\n\n      $btn-shad-size $btn-shad-size $btn-shad-size $shad-col,\n      (-$btn-shad-size) (-$btn-shad-size) $btn-shad-size $light-col,\n      inset $btn-shad-size $btn-shad-size $btn-shad-size  $shad-col,\n      inset (-$btn-shad-size) (-$btn-shad-size) $btn-shad-size  $light-col;\n}","@use 'css/nm-style' as *;\n\n#buttons {\n\tposition: relative;\n\tdisplay: inline-block;\n  align-items: center;\n}\n\nbutton {\n  @include nm-shape--convex;\n\n\n  &:hover {\n    @include nm-shape--convex-raised;\n  }\n\n\t&:active {\n    @include nm-shape--concave;\n    background-color: rgba(29, 168, 126, 0.507);\n  }\n}\n\n.rounded-square{\n  width: $btn-size;\n  height: $btn-size;\n  border-radius: $btn-bord-rad;\n}","// $foc-bg-color:rgb(85, 85, 85);\n// $act-bg-color: rgb(43, 43, 43);\n$size-ratio: 6.5vmin;\n$btn-size: $size-ratio;\n$btn-bord-rad: 21%;\n$input-bord-rad: $btn-size * 0.5;\n\n\n$btn-shad-size: $size-ratio * 0.05;\n$active-btn-shad-size: $size-ratio * 0.05;;\n$hover-btn-shad-size: $size-ratio * 0.12;\n\n/*\n// // $shad-col: rgba(0, 0, 0, 0.088); // Dark Mode\n// // $light-col: rgba(255, 255, 255, 0.021);\n// $shad-col: rgba(0, 0, 0, 0.034); // Light Mode\n// $light-col: rgba(255, 255, 255, 0.123);\n*/\n\n/* Dark Mode  */\n$bg-color-dark: rgb(39, 35, 34);\n/* Light Mode */\n$bg-color-light: rgb(207, 200, 198);\n$bg-color: $bg-color-dark;\n// $timer-bg: lighten($list-bg, 28%);\n\n\n$shad-col: rgba(0, 0, 0, 0.088); // Dark Mode\n$light-col: rgba(255, 255, 255, 0.021);\n\n// $shad-col: rgba(0, 0, 0, 0.034);\n// $light-col: rgba(255, 255, 255, 0.123);\n\n$text-color: rgba(117, 117, 117, 0.479);\n\n$timer-bg-color: transparent;\n$timer-size: $size-ratio * 6;\n$time-disp-txt-size: $timer-size * 0.2;\n$timer-btn-size: $timer-size * 0.2;","@import 'nm-style.scss';\n@import 'variables.scss';\n\nsvg circle{\n  /* border: 3px solid red; */\n  stroke: rgba(116, 101, 101, 0.281);\n  stroke-width: 5px;\n  fill: transparent;\n  stroke-dasharray: 1000px;\n  stroke-dashoffset: 500px;\n  animation: dash-animation 30s ease forwards;\n}\n\n\n.circle{\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // background: transparent;\n  /* border: 3px solid green; */\n}\n\n\n#set-half-hour{\n  width: $timer-btn-size * 0.5;\n  height: $timer-btn-size;\n  // position: absolute;\n  // background-color: blue;\n  grid-area: half-hour-button;\n  border-radius: 0 $timer-btn-size $timer-btn-size 0;\n  place-self: center;\n  // justify-self: end;\n  margin-left: $btn-size;\n}\n\n#set-hour{\n  width: $timer-btn-size;\n  height: $timer-btn-size;\n  // position: absolute;\n  // background-color: blue;\n  grid-area: hour-button;\n  border-radius: 50%;\n  place-self: center;\n  // align-self: flex-end;\n}\n\n#timer-container{\n\n  // $btn-shad-size: $timer-size;\n  // @include nm-shape--convex-raised;\n\n  position: absolute;\n  left:50%;\n  top: 50%;\n  transform: translate(-50%,-50%);\n  width: $timer-size;\n  height: $timer-size;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  grid-area: time;\n  // background-color: transparent;\n\n\n\n\n  &:hover{\n    // @include nm-shape--convex-raised;\n    position: absolute;\n    left:50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n\n\n    background-color: rgba(255, 255, 255, 0.226);\n  }\n}\n\n.not-running{\n  @include nm-shape--convex;\n      // background-color: rgba(175, 175, 175, 0.226);\n\n\n}\n\n.running{\n  @include nm-shape--concave;\n  background-color: rgba(0, 0, 0, 0.116);\n\n}\n\n#time-display {\n  grid-area: time;\n  place-self: center;\n  font-size: $time-disp-txt-size;\n  display: grid;\n  grid-template-columns: 1fr 1fr 0.5fr 1fr 1fr;\n  place-content: center;\n  // grid-template-rows: 100%;\n  grid-template-areas: \"tenMins singleMins colon tenSecs singleSecs\";\n  // justify-items: center;\n\n  // display: flex\n}\n\n#work-timeline{\n  position: relative;\n  /* width: 90%;\n  height: 90%; */\n  /* background: red; */\n  border: 3px dashed rgba(255, 255, 255, 0.541);\n  /* dash */\n}\n\n#rest-timeline{\n  position: relative;\n}\n\n@keyframes dash-animation{\n  to{\n    stroke-dashoffset: 200;\n  }\n}\n\n#time-input {\n  grid-area: time-input-area;\n  // max-width: 100%;\n  // margin: 0;\n  place-content: center;\n\n}\n\n#time-input input{\n  font-size: 50%;\n  margin: 0;\n  max-width: 75%;\n}\n/*Grid CSS*/\n#dial-panel {\n  display: grid;\n  grid-template-columns: 1fr 2fr 2fr 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n\n  grid-template-areas:\n  \". time-input-area time-input-area .\"\n  \". time time .\"\n  \". hour-button half-hour-button .\";\n}\n\n.grid-half-hour-button-position{\n  grid-area: half-hour-button;\n\n  //grid-column: 2 / 3;\n  //grid-row: 3 / 4;\n}\n.grid-hour-button-position{\n  grid-area: hour-button;\n\n  //grid-column: 3 / 4;\n  //grid-row: 3 / 4;\n}\n.grid-time-position{\n  grid-area: time;\n  //grid-column: 2 / 3;\n  //grid-row: 2 / 3;\n}","@import 'nm-style.scss';\n\ninput {\n  // display: ;\n  // width: ;\n  @include nm-shape--convex;\n  border-radius: $btn-size;\n\n\n  &:hover{\n    @include nm-shape--convex-raised;\n  }\n\n  &:focus{\n    @include nm-shape--concave;\n  }\n\n}\n\n","@import 'nm-style.scss';\n@import 'buttons.scss';\n@import 'timer.scss';\n@import 'variables.scss';\n@import 'input.scss';\n\n*, *:before, *:after{\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Montserrat', sans-serif;\n  color: $text-color\n}\n\nbutton{\n  @include nm-shape--convex();\n  // background-color: blue;\n}\n\nbody{\n  width: 1fr;\n  height: 100vh;\n  /* Dark Mode  */\n  background-color: $bg-color;\n\n  /* Light Mode */\n  // background-color: $list-bg;\n  // background-color: green;\n}\n// Add minimum width so that timer can stay on top when window width is reduced\n.flex-body-wrapper {\ndisplay: flex;\nflex-wrap: wrap;\n\nwidth: 1fr;\nheight: 100vh;\n}\n\n$breakpoint-tablet: 768px;\n@media (max-width: $breakpoint-tablet) {\n  .flex-body-wrapper{\n    flex-direction: column-reverse;\n\n  }\n}\n\n.flex-container-lists {\n  // background-color: $bg-color;\n  position: relative;\n  width: 50%;\n  min-width: 500px;\n  padding: 2%;\n}\n\n.habit-container {\n  height: 50vh;\n}\n\n.task-container {\n  height: 50vh;\n}\n\n.flex-container-timer {\n  background-color:  rgba(255, 255, 255, 0.281);\n  // background-color: $timer-bg;\n  position: relative;\n  width: 50%;\n  min-width: 500px;\n  padding-left: 10px;\n  padding-right: 10px;\n}"]}